// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChatRoomsColumns holds the columns for the "chat_rooms" table.
	ChatRoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "user_chat_rooms", Type: field.TypeInt, Unique: true},
	}
	// ChatRoomsTable holds the schema information for the "chat_rooms" table.
	ChatRoomsTable = &schema.Table{
		Name:       "chat_rooms",
		Columns:    ChatRoomsColumns,
		PrimaryKey: []*schema.Column{ChatRoomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "chat_rooms_users_chat_rooms",
				Columns:    []*schema.Column{ChatRoomsColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ChatRoomMembersColumns holds the columns for the "chat_room_members" table.
	ChatRoomMembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "joined_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "room_id", Type: field.TypeInt},
	}
	// ChatRoomMembersTable holds the schema information for the "chat_room_members" table.
	ChatRoomMembersTable = &schema.Table{
		Name:       "chat_room_members",
		Columns:    ChatRoomMembersColumns,
		PrimaryKey: []*schema.Column{ChatRoomMembersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "chat_room_members_users_user",
				Columns:    []*schema.Column{ChatRoomMembersColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "chat_room_members_chat_rooms_room",
				Columns:    []*schema.Column{ChatRoomMembersColumns[3]},
				RefColumns: []*schema.Column{ChatRoomsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "chatroommember_user_id_room_id",
				Unique:  true,
				Columns: []*schema.Column{ChatRoomMembersColumns[2], ChatRoomMembersColumns[3]},
			},
		},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "chat_room_messages", Type: field.TypeInt},
		{Name: "user_messages", Type: field.TypeInt},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "messages_chat_rooms_messages",
				Columns:    []*schema.Column{MessagesColumns[3]},
				RefColumns: []*schema.Column{ChatRoomsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "messages_users_messages",
				Columns:    []*schema.Column{MessagesColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password_hash", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChatRoomsTable,
		ChatRoomMembersTable,
		MessagesTable,
		UsersTable,
	}
)

func init() {
	ChatRoomsTable.ForeignKeys[0].RefTable = UsersTable
	ChatRoomMembersTable.ForeignKeys[0].RefTable = UsersTable
	ChatRoomMembersTable.ForeignKeys[1].RefTable = ChatRoomsTable
	MessagesTable.ForeignKeys[0].RefTable = ChatRoomsTable
	MessagesTable.ForeignKeys[1].RefTable = UsersTable
}
