// Code generated by ent, DO NOT EDIT.

package ent

import (
	"chatSystem/ent/chatroom"
	"chatSystem/ent/chatroommember"
	"chatSystem/ent/message"
	"chatSystem/ent/schema"
	"chatSystem/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	chatroomFields := schema.ChatRoom{}.Fields()
	_ = chatroomFields
	// chatroomDescName is the schema descriptor for name field.
	chatroomDescName := chatroomFields[0].Descriptor()
	// chatroom.NameValidator is a validator for the "name" field. It is called by the builders before save.
	chatroom.NameValidator = chatroomDescName.Validators[0].(func(string) error)
	chatroommemberFields := schema.ChatRoomMember{}.Fields()
	_ = chatroommemberFields
	// chatroommemberDescJoinedAt is the schema descriptor for joined_at field.
	chatroommemberDescJoinedAt := chatroommemberFields[0].Descriptor()
	// chatroommember.DefaultJoinedAt holds the default value on creation for the joined_at field.
	chatroommember.DefaultJoinedAt = chatroommemberDescJoinedAt.Default.(func() time.Time)
	messageFields := schema.Message{}.Fields()
	_ = messageFields
	// messageDescContent is the schema descriptor for content field.
	messageDescContent := messageFields[0].Descriptor()
	// message.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	message.ContentValidator = messageDescContent.Validators[0].(func(string) error)
	// messageDescCreatedAt is the schema descriptor for created_at field.
	messageDescCreatedAt := messageFields[1].Descriptor()
	// message.DefaultCreatedAt holds the default value on creation for the created_at field.
	message.DefaultCreatedAt = messageDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[2].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = userDescPasswordHash.Validators[0].(func(string) error)
}
